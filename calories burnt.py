# -*- coding: utf-8 -*-
"""Calories burnt.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lmxOr_5g6fsGMax9F9yXJxc_s9B5fBWh

Installing libraries
"""

pip install pandas

import pandas as pd

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from xgboost import XGBRegressor
from sklearn import metrics

calories=pd.read_csv('/calories.csv') #loading data from csv file to pandas data frame

calories.head() #printing first five rows of the data frame

exercise=pd.read_csv('/exercise.csv')

exercise.head()

"""combining the two data frames"""

calories_data=pd.concat([exercise,calories['Calories']],axis=1)

calories_data.head()

calories_data.shape #checking number of rows and columns

#getting info about data
calories_data.info()

calories_data.isnull().sum() #checking for missing values

"""Data Analysis"""

#get some statistical measures of the data
calories_data.describe()

"""Data visualisation"""

sns.set()

#plotting the gender column in count plot
sns.countplot(calories_data['Gender'])

#finding the distribution of age column
sns.distplot(calories_data['Age'])

sns.distplot(calories_data['Height'])

sns.distplot(calories_data['Weight'])

sns.distplot(calories_data['Duration'])

sns.distplot(calories_data['Heart_Rate'])

sns.distplot(calories_data['Body_Temp'])

sns.distplot(calories_data['Calories'])

"""converting text to numerical values




"""

calories_data['Gender'] = calories_data['Gender'].map({'male': 0, 'female': 1})

calories_data.head()

"""finding correltion"""

correlation=calories_data.corr()

calories_data = calories_data.drop('Gender', axis=1)
correlation = calories_data.corr()

plt.figure(figsize=(10,10))
sns.heatmap(correlation, cbar=True,square=True,fmt='.1f',annot=True,annot_kws={'size':8},cmap='Blues')

calories_data.head()

"""Reloading gender column"""

calories=pd.read_csv('/calories.csv')
exercise=pd.read_csv('/exercise.csv')
calories_data=pd.concat([exercise,calories['Calories']],axis=1)

calories_data.head()

calories_data.replace({"Gender":{'male':0,'female':1}}, inplace=True)

calories_data.head()

"""saperating features and target"""

X=calories_data.drop(columns=['User_ID','Calories'],axis=1)
Y=calories_data['Calories']

print(X)

print(Y)

"""Splitting training and test data"""

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,random_state=2)

print(X.shape,X_train.shape,X_test.shape)

"""XGBoost Regressor"""

# loading the model
model = XGBRegressor()

# training the model with X_train
model.fit(X_train, Y_train)

"""Evaluation"""

test_data_prediction=model.predict(X_test)

print(test_data_prediction)

mae = metrics.mean_absolute_error(Y_test, test_data_prediction)

print("Mean Absolute Error = ", mae)